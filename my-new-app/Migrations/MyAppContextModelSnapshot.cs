// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using my_new_app.SQLite;

namespace my_new_app.Migrations
{
    [DbContext(typeof(MyAppContext))]
    partial class MyAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("my_new_app.SQLite.Einheit", b =>
                {
                    b.Property<int>("EinheitId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ObjektId");

                    b.Property<int?>("PersonId");

                    b.Property<string>("name");

                    b.HasKey("EinheitId");

                    b.HasIndex("ObjektId");

                    b.HasIndex("PersonId");

                    b.ToTable("Einheit");
                });

            modelBuilder.Entity("my_new_app.SQLite.Objekt", b =>
                {
                    b.Property<int>("ObjektId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("besitzerPersonId");

                    b.Property<string>("name");

                    b.HasKey("ObjektId");

                    b.HasIndex("besitzerPersonId");

                    b.ToTable("Objekt");
                });

            modelBuilder.Entity("my_new_app.SQLite.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("PersonId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("my_new_app.SQLite.Verbrauch", b =>
                {
                    b.Property<int>("VerbrauchId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EinheitId");

                    b.Property<int>("verbrauch");

                    b.HasKey("VerbrauchId");

                    b.HasIndex("EinheitId");

                    b.ToTable("Verbrauch");
                });

            modelBuilder.Entity("my_new_app.SQLite.Einheit", b =>
                {
                    b.HasOne("my_new_app.SQLite.Objekt")
                        .WithMany("einheiten")
                        .HasForeignKey("ObjektId");

                    b.HasOne("my_new_app.SQLite.Person", "person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("my_new_app.SQLite.Objekt", b =>
                {
                    b.HasOne("my_new_app.SQLite.Person", "besitzer")
                        .WithMany()
                        .HasForeignKey("besitzerPersonId");
                });

            modelBuilder.Entity("my_new_app.SQLite.Verbrauch", b =>
                {
                    b.HasOne("my_new_app.SQLite.Einheit", "einheit")
                        .WithMany()
                        .HasForeignKey("EinheitId");
                });
#pragma warning restore 612, 618
        }
    }
}
